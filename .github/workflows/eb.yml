name: eb

# 파일 실행 트리거 설정
on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"

  workflow_dispatch:

# 실행될 동작 정의
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: "adopt"

      # Github secrets 에서 데이터를 받아서 워크 플로우에 application.properties 생성
      - name: Make application.properties
        run: |
          cd ./src/main/resources
          touch ./application.properties
          echo "${{ secrets.PROPERTIES }}" > ./application.properties
        shell: bash

      # gradle을 통해 소스코드 빌드
      - name: Build with Gradle
        run: |
          chmod +x ./gradlew
          ./gradlew clean build -x test

      # AWS config
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}          # 나의 ECR 정보
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # ECR 로그인
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1


      - name: Build, tag, and push backend Docker image to Amazon ECR
        id: build-image
        run: |
          docker build -t ${{ secrets.ECR_REGISTRY }}:v1.0 .
          docker push ${{ secrets.ECR_REGISTRY }}:v1.0


      - name: Generate deployment package
        run: |
          mkdir -p deploy
          cp Dockerrun.aws.json deploy/Dockerrun.aws.json
          cd deploy && zip -r deploy.zip .

      # 기존 버전 삭제
      - name: Delete existing application version
        run: |
          aws elasticbeanstalk delete-application-version \
            --application-name odop \
            --version-label test-v1.0 \
            --delete-source-bundle


      - name: Beanstalk Deploy
        uses: einaregilsson/beanstalk-deploy@v14
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: odop
          environment_name: Odop-env
          version_label: test-v1.0
          region: ap-northeast-2
          deployment_package: deploy/deploy.zip
          wait_for_environment_recovery: 500